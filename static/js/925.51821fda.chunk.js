(self.webpackChunk_3d_examples=self.webpackChunk_3d_examples||[]).push([[925],{925:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return p}});var r=n(5671),a=n(3144),o=n(136),i=n(9388),s=n(7313),l=n(3562),v=n(2518),u=n(1935),c=n(5346),g=n(6938),d=n(2584),h=n.n(d),f=n(6554),m=n.n(f),x=n(6417),p=function(t){(0,o.Z)(n,t);var e=(0,i.Z)(n);function n(){var t;(0,r.Z)(this,n);for(var a=arguments.length,o=new Array(a),i=0;i<a;i++)o[i]=arguments[i];return(t=e.call.apply(e,[this].concat(o))).initThree=function(){var t={width:window.innerWidth,height:window.innerHeight},e=document.querySelector("canvas.webgl"),n=new l.CP7({canvas:e});n.setSize(t.width,t.height),n.setPixelRatio(Math.min(window.devicePixelRatio,2)),n.toneMapping=THREE.ReinhardToneMapping,n.autoClear=!1;var r=new l.xsS,a=new l.cPb(75,t.width/t.height,.1,100);a.position.set(.25,-.25,1),r.add(a);var o=new v.z(a,n.domElement);o.enableDamping=!0,window.addEventListener("resize",(function(){t.width=window.innerWidth,t.height=window.innerHeight,n.setSize(t.width,t.height),n.setPixelRatio(Math.min(window.devicePixelRatio,2)),a.aspect=t.width/t.height,a.updateProjectionMatrix()}));var i=new l.jyz({side:l.ehD,vertexShader:h(),fragmentShader:m()}),s=new l.Kj0(new l.Wjw(1,64),i);s.scale.set(.5,.5,.5),r.add(s);var d=new g.C(r,a),f=new c.m(new l.FM8(window.innerWidth,window.innerHeight),1.5,.4,.85);f.threshold=0,f.strength=2.2,f.radius=.2;var x=new u.xC(n);x.renderToScreen=!0,x.addPass(d),x.addPass(f);var p=new THREE.AmbientLight(16777215,1.2);r.add(p);!function t(){s&&(s.rotation.y+=.01),s&&(s.rotation.x+=.005),x&&x.render(),o.update(),n.render(r,a),window.requestAnimationFrame(t)}()},t}return(0,a.Z)(n,[{key:"componentDidMount",value:function(){this.initThree()}},{key:"render",value:function(){return(0,x.jsxs)("div",{className:"flag_page",children:[(0,x.jsx)("canvas",{className:"webgl"}),(0,x.jsxs)("a",{className:"github",href:"https://github.com/dragonir/3d",target:"_blank",rel:"noreferrer",children:[(0,x.jsx)("svg",{height:"36","aria-hidden":"true",viewBox:"0 0 16 16",version:"1.1",width:"36","data-view-component":"true",children:(0,x.jsx)("path",{fill:"#FFFFFF",fillRule:"evenodd",d:"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"})}),(0,x.jsx)("span",{className:"author",children:"@dragonir"})]})]})}}]),n}(s.Component)},6554:function(t){t.exports="#define PI 3.1415926535897932384626433832795\n\nvarying vec2 vUv;\n\nfloat random(vec2 st) {\n  return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nvec2 rotate(vec2 uv, float rotation, vec2 mid) {\n  return vec2(\n    cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n    cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n  );\n}\n\n// \u521b\u5efa\u4e8c\u7ef4\u67cf\u6797\u566a\u58f0\nvec4 permute(vec4 x) {\n  return mod(((x * 34.0) + 1.0) * x, 289.0);\n}\n\nvec2 fade(vec2 t) {\n  return t * t * t * (t * (t * 6.0 - 15.0 ) + 10.0);\n}\n\nfloat cnoise(vec2 P) {\n  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\n  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\n  Pi = mod(Pi, 289.0);\n  vec4 ix = Pi.xzxz;\n  vec4 iy = Pi.yyww;\n  vec4 fx = Pf.xzxz;\n  vec4 fy = Pf.yyww;\n  vec4 i = permute(permute(ix) + iy);\n  vec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0;\n  vec4 gy = abs(gx) - 0.5;\n  vec4 tx = floor(gx + 0.5);\n  gx = gx - tx;\n  vec2 g00 = vec2(gx.x,gy.x);\n  vec2 g10 = vec2(gx.y,gy.y);\n  vec2 g01 = vec2(gx.z,gy.z);\n  vec2 g11 = vec2(gx.w,gy.w);\n  vec4 norm = 1.79284291400159 - 0.85373472095314 * vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));\n  g00 *= norm.x;\n  g01 *= norm.y;\n  g10 *= norm.z;\n  g11 *= norm.w;\n  float n00 = dot(g00, vec2(fx.x, fy.x));\n  float n10 = dot(g10, vec2(fx.y, fy.y));\n  float n01 = dot(g01, vec2(fx.z, fy.z));\n  float n11 = dot(g11, vec2(fx.w, fy.w));\n  vec2 fade_xy = fade(Pf.xy);\n  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\n  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\n  return 2.3 * n_xy;\n}\n\nvoid main() {\n  // // pattern 1\n  // gl_FragColor = vec4(vUv, 1.0, 1.0);\n\n  // // pattern 2\n  // gl_FragColor = vec4(vUv, 0.0, 1.0);\n\n  // // pattern 3\n  // float strength = vUv.x;\n  // gl_FragColor = vec4(vec3(strength), 1.0);\n  // \u7b49\u4ef7\u4e8e\n  // gl_FragColor = vec4(vUv.x, vUv.x, vUv.x, 1.0);\n\n  // // pattern 4\n  // float strength = vUv.y;\n  // gl_FragColor = vec4(vec3(strength), 1.0);\n\n  // // pattern 5\n  // float strength = 1.0 - vUv.y;\n  // gl_FragColor = vec4(vec3(strength), 1.0);\n\n  // pattern 6\n  // float strength = vUv.y * 10.0;\n  // gl_FragColor = vec4(vec3(strength), 1.0);\n\n  // pattern 7\n  // float strength = mod(vUv.y * 10.0, 1.0);\n  // gl_FragColor = vec4(vec3(strength), 1.0);\n\n  // pattern 8\n  // float strength = mod(vUv.y * 10.0, 1.0);\n  // strength = step(0.5, strength);\n  // gl_FragColor = vec4(vec3(strength), 1.0);\n\n  // pattern 9\n  // float strength = mod(vUv.y * 10.0, 1.0);\n  // strength = step(0.8, strength);\n  // gl_FragColor = vec4(vec3(strength), 1.0);\n\n  // pattern 10\n  // float strength = mod(vUv.x * 10.0, 1.0);\n  // strength = step(0.8, strength);\n  // gl_FragColor = vec4(vec3(strength), 1.0);\n\n  // pattern 11\n  // float strength = step(0.8, mod(vUv.x * 10.0, 1.0));\n  // strength += step(0.8, mod(vUv.y * 10.0, 1.0));\n  // strength = clamp(strength, 0.0, 1.0);\n  // gl_FragColor = vec4(vec3(strength), 1.0);\n\n  // pattern 12\n  // float strength = step(0.8, mod(vUv.x * 10.0, 1.0));\n  // strength *= step(0.8, mod(vUv.y * 10.0, 1.0));\n  // gl_FragColor = vec4(vec3(strength), 1.0);\n\n  // pattern 13\n  // float strength = step(0.4, mod(vUv.x * 10.0, 1.0));\n  // strength *= step(0.8, mod(vUv.y * 10.0, 1.0));\n  // gl_FragColor = vec4(vec3(strength), 1.0);\n\n  // pattern 14\n  // float barX = step(0.4, mod(vUv.x * 10.0, 1.0)) * step(0.8, mod(vUv.y * 10.0, 1.0));\n  // float barY = step(0.8, mod(vUv.x * 10.0, 1.0)) * step(0.4, mod(vUv.y * 10.0, 1.0));\n  // float strength = barX + barY;\n  // strength = clamp(strength, 0.0, 1.0);\n  // gl_FragColor = vec4(vec3(strength), 1.0);\n\n  // // Pattern 15\n  // float barX = step(0.4, mod(vUv.x * 10.0 - 0.2, 1.0)) * step(0.8, mod(vUv.y * 10.0, 1.0));\n  // float barY = step(0.8, mod(vUv.x * 10.0, 1.0)) * step(0.4, mod(vUv.y * 10.0 - 0.2, 1.0));\n  // float strength = barX + barY;\n  // strength = clamp(strength, 0.0, 1.0);\n\n  // // Pattern 16\n  // float strength = abs(vUv.x - 0.5);\n\n  // // Pattern 17\n  // float strength = min(abs(vUv.x - 0.5), abs(vUv.y - 0.5));\n\n  // // Pattern 18\n  // float strength = max(abs(vUv.x - 0.5), abs(vUv.y - 0.5));\n\n  // // Pattern 19\n  // float strength = step(0.2, max(abs(vUv.x - 0.5), abs(vUv.y - 0.5)));\n\n  // // Pattern 20\n  // float strength = step(0.2, max(abs(vUv.x - 0.5), abs(vUv.y - 0.5)));\n  // strength *= 1.0 - step(0.25, max(abs(vUv.x - 0.5), abs(vUv.y - 0.5)));\n\n  // // Pattern 21\n  // float strength = floor(vUv.x * 10.0) / 10.0;\n\n  // // Pattern 22\n  // float strength = floor(vUv.x * 10.0) / 10.0 * floor(vUv.y * 10.0) / 10.0;\n\n  // // Pattern 23\n  // float strength = random(vUv);\n\n  // // Pattern 24\n  // vec2 gridUv = vec2(floor(vUv.x * 10.0) / 10.0, floor(vUv.y * 10.0) / 10.0);\n  // float strength = random(gridUv);\n\n  // // Pattern 25\n  // vec2 gridUv = vec2(floor(vUv.x * 10.0) / 10.0, floor((vUv.y + vUv.x * 0.5) * 10.0) / 10.0);\n  // float strength = random(gridUv);\n\n  // // Pattern 26\n  // float strength = length(vUv);\n\n  // // Pattern 27\n  // float strength = distance(vUv, vec2(0.5));\n\n  // // Pattern 28\n  // float strength = 1.0 - distance(vUv, vec2(0.5));\n\n  // // Pattern 29\n  // float strength = 0.015 / (distance(vUv, vec2(0.5)));\n\n  // // Pattern 30\n  // float strength = 0.15 / (distance(vec2(vUv.x, (vUv.y - 0.5) * 5.0 + 0.5), vec2(0.5)));\n\n  // // Pattern 31\n  // float strength = 0.15 / (distance(vec2(vUv.x, (vUv.y - 0.5) * 5.0 + 0.5), vec2(0.5)));\n  // strength *= 0.15 / (distance(vec2(vUv.y, (vUv.x - 0.5) * 5.0 + 0.5), vec2(0.5)));\n\n  // // Pattern 32\n  // vec2 rotatedUv = rotate(vUv, PI * 0.25, vec2(0.5));\n  // float strength = 0.15 / (distance(vec2(rotatedUv.x, (rotatedUv.y - 0.5) * 5.0 + 0.5), vec2(0.5)));\n  // strength *= 0.15 / (distance(vec2(rotatedUv.y, (rotatedUv.x - 0.5) * 5.0 + 0.5), vec2(0.5)));\n\n  // // Pattern 33\n  // float strength = step(0.5, distance(vUv, vec2(0.5)) + 0.25);\n\n  // // Pattern 34\n  // float strength = abs(distance(vUv, vec2(0.5)) - 0.25);\n\n  // // Pattern 35\n  // float strength = step(0.01, abs(distance(vUv, vec2(0.5)) - 0.25));\n\n  // // Pattern 36\n  // float strength = 1.0 - step(0.01, abs(distance(vUv, vec2(0.5)) - 0.25));\n\n  // // Pattern 37\n  // vec2 wavedUv = vec2(\n  //     vUv.x,\n  //     vUv.y + sin(vUv.x * 30.0) * 0.1\n  // );\n  // float strength = 1.0 - step(0.01, abs(distance(wavedUv, vec2(0.5)) - 0.25));\n\n  // // Pattern 38\n  // vec2 wavedUv = vec2(\n  //     vUv.x + sin(vUv.y * 30.0) * 0.1,\n  //     vUv.y + sin(vUv.x * 30.0) * 0.1\n  // );\n  // float strength = 1.0 - step(0.01, abs(distance(wavedUv, vec2(0.5)) - 0.25));\n\n  // // Pattern 39\n  // vec2 wavedUv = vec2(\n  //     vUv.x + sin(vUv.y * 100.0) * 0.1,\n  //     vUv.y + sin(vUv.x * 100.0) * 0.1\n  // );\n  // float strength = 1.0 - step(0.01, abs(distance(wavedUv, vec2(0.5)) - 0.25));\n\n  // // Pattern 40\n  // float angle = atan(vUv.x, vUv.y);\n  // float strength = angle;\n\n  // // Pattern 41\n  // float angle = atan(vUv.x - 0.5, vUv.y - 0.5);\n  // float strength = angle;\n\n  // // Pattern 42\n  // float angle = atan(vUv.x - 0.5, vUv.y - 0.5) / (PI * 2.0) + 0.5;\n  // float strength = angle;\n\n  // // Pattern 43\n  // float angle = atan(vUv.x - 0.5, vUv.y - 0.5) / (PI * 2.0) + 0.5;\n  // float strength = mod(angle * 20.0, 1.0);\n\n  // // Pattern 44\n  // float angle = atan(vUv.x - 0.5, vUv.y - 0.5) / (PI * 2.0) + 0.5;\n  // float strength = sin(angle * 100.0);\n\n  // // Pattern 45\n  // float angle = atan(vUv.x - 0.5, vUv.y - 0.5) / (PI * 2.0) + 0.5;\n  // float radius = 0.25 + sin(angle * 100.0) * 0.02;\n  // float strength = 1.0 - step(0.01, abs(distance(vUv, vec2(0.5)) - radius));\n\n  // // Pattern 46\n  // float strength = cnoise(vUv * 10.0);\n\n  // // Pattern 47\n  // float strength = step(0.0, cnoise(vUv * 10.0));\n\n  // // Pattern 48\n  // float strength = 1.0 - abs(cnoise(vUv * 10.0));\n\n  // // Pattern 49\n  // float strength = sin(cnoise(vUv * 10.0) * 20.0);\n\n  // Pattern 50\n  float strength = step(0.8, sin(cnoise(vUv * 10.0) * 20.0));\n\n  // Final color\n  vec3 blackColor = vec3(0.0);\n  vec3 uvColor = vec3(vUv, 0.2);\n  vec3 mixedColor = mix(blackColor, uvColor, strength);\n\n  // gl_FragColor = vec4(vec3(strength), 1.0);\n  gl_FragColor = vec4(mixedColor, 1.0);\n\n}"},2584:function(t){t.exports="varying vec2 vUv;\n\nvoid main() {\n  gl_Position =projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  vUv = uv;\n}"},5346:function(t,e,n){"use strict";n.d(e,{m:function(){return c}});var r=n(5671),a=n(3144),o=n(136),i=n(9388),s=n(3562),l=n(6531),v=n(3500),u=n(5349),c=function(t){(0,o.Z)(n,t);var e=(0,i.Z)(n);function n(t,a,o,i){var c;(0,r.Z)(this,n),(c=e.call(this)).strength=void 0!==a?a:1,c.radius=o,c.threshold=i,c.resolution=void 0!==t?new s.FM8(t.x,t.y):new s.FM8(256,256),c.clearColor=new s.Ilk(0,0,0);var g={minFilter:s.wem,magFilter:s.wem,format:s.wk1};c.renderTargetsHorizontal=[],c.renderTargetsVertical=[],c.nMips=5;var d=Math.round(c.resolution.x/2),h=Math.round(c.resolution.y/2);c.renderTargetBright=new s.dd2(d,h,g),c.renderTargetBright.texture.name="UnrealBloomPass.bright",c.renderTargetBright.texture.generateMipmaps=!1;for(var f=0;f<c.nMips;f++){var m=new s.dd2(d,h,g);m.texture.name="UnrealBloomPass.h"+f,m.texture.generateMipmaps=!1,c.renderTargetsHorizontal.push(m);var x=new s.dd2(d,h,g);x.texture.name="UnrealBloomPass.v"+f,x.texture.generateMipmaps=!1,c.renderTargetsVertical.push(x),d=Math.round(d/2),h=Math.round(h/2)}void 0===u.Y&&console.error("THREE.UnrealBloomPass relies on LuminosityHighPassShader");var p=u.Y;c.highPassUniforms=s.rDY.clone(p.uniforms),c.highPassUniforms.luminosityThreshold.value=i,c.highPassUniforms.smoothWidth.value=.01,c.materialHighPassFilter=new s.jyz({uniforms:c.highPassUniforms,vertexShader:p.vertexShader,fragmentShader:p.fragmentShader,defines:{}}),c.separableBlurMaterials=[];var U=[3,5,7,9,11];d=Math.round(c.resolution.x/2),h=Math.round(c.resolution.y/2);for(var b=0;b<c.nMips;b++)c.separableBlurMaterials.push(c.getSeperableBlurMaterial(U[b])),c.separableBlurMaterials[b].uniforms.texSize.value=new s.FM8(d,h),d=Math.round(d/2),h=Math.round(h/2);c.compositeMaterial=c.getCompositeMaterial(c.nMips),c.compositeMaterial.uniforms.blurTexture1.value=c.renderTargetsVertical[0].texture,c.compositeMaterial.uniforms.blurTexture2.value=c.renderTargetsVertical[1].texture,c.compositeMaterial.uniforms.blurTexture3.value=c.renderTargetsVertical[2].texture,c.compositeMaterial.uniforms.blurTexture4.value=c.renderTargetsVertical[3].texture,c.compositeMaterial.uniforms.blurTexture5.value=c.renderTargetsVertical[4].texture,c.compositeMaterial.uniforms.bloomStrength.value=a,c.compositeMaterial.uniforms.bloomRadius.value=.1,c.compositeMaterial.needsUpdate=!0;c.compositeMaterial.uniforms.bloomFactors.value=[1,.8,.6,.4,.2],c.bloomTintColors=[new s.Pa4(1,1,1),new s.Pa4(1,1,1),new s.Pa4(1,1,1),new s.Pa4(1,1,1),new s.Pa4(1,1,1)],c.compositeMaterial.uniforms.bloomTintColors.value=c.bloomTintColors,void 0===v.C&&console.error("THREE.UnrealBloomPass relies on CopyShader");var y=v.C;return c.copyUniforms=s.rDY.clone(y.uniforms),c.copyUniforms.opacity.value=1,c.materialCopy=new s.jyz({uniforms:c.copyUniforms,vertexShader:y.vertexShader,fragmentShader:y.fragmentShader,blending:s.WMw,depthTest:!1,depthWrite:!1,transparent:!0}),c.enabled=!0,c.needsSwap=!1,c._oldClearColor=new s.Ilk,c.oldClearAlpha=1,c.basic=new s.vBJ,c.fsQuad=new l.T(null),c}return(0,a.Z)(n,[{key:"dispose",value:function(){for(var t=0;t<this.renderTargetsHorizontal.length;t++)this.renderTargetsHorizontal[t].dispose();for(var e=0;e<this.renderTargetsVertical.length;e++)this.renderTargetsVertical[e].dispose();this.renderTargetBright.dispose()}},{key:"setSize",value:function(t,e){var n=Math.round(t/2),r=Math.round(e/2);this.renderTargetBright.setSize(n,r);for(var a=0;a<this.nMips;a++)this.renderTargetsHorizontal[a].setSize(n,r),this.renderTargetsVertical[a].setSize(n,r),this.separableBlurMaterials[a].uniforms.texSize.value=new s.FM8(n,r),n=Math.round(n/2),r=Math.round(r/2)}},{key:"render",value:function(t,e,r,a,o){t.getClearColor(this._oldClearColor),this.oldClearAlpha=t.getClearAlpha();var i=t.autoClear;t.autoClear=!1,t.setClearColor(this.clearColor,0),o&&t.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=r.texture,t.setRenderTarget(null),t.clear(),this.fsQuad.render(t)),this.highPassUniforms.tDiffuse.value=r.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,t.setRenderTarget(this.renderTargetBright),t.clear(),this.fsQuad.render(t);for(var s=this.renderTargetBright,l=0;l<this.nMips;l++)this.fsQuad.material=this.separableBlurMaterials[l],this.separableBlurMaterials[l].uniforms.colorTexture.value=s.texture,this.separableBlurMaterials[l].uniforms.direction.value=n.BlurDirectionX,t.setRenderTarget(this.renderTargetsHorizontal[l]),t.clear(),this.fsQuad.render(t),this.separableBlurMaterials[l].uniforms.colorTexture.value=this.renderTargetsHorizontal[l].texture,this.separableBlurMaterials[l].uniforms.direction.value=n.BlurDirectionY,t.setRenderTarget(this.renderTargetsVertical[l]),t.clear(),this.fsQuad.render(t),s=this.renderTargetsVertical[l];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,t.setRenderTarget(this.renderTargetsHorizontal[0]),t.clear(),this.fsQuad.render(t),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,o&&t.state.buffers.stencil.setTest(!0),this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(r),this.fsQuad.render(t)),t.setClearColor(this._oldClearColor,this.oldClearAlpha),t.autoClear=i}},{key:"getSeperableBlurMaterial",value:function(t){return new s.jyz({defines:{KERNEL_RADIUS:t,SIGMA:t},uniforms:{colorTexture:{value:null},texSize:{value:new s.FM8(.5,.5)},direction:{value:new s.FM8(.5,.5)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\n\t\t\t\tuniform vec2 direction;\n\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\n\t\t\t\t}\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\n\t\t\t\t\tfloat fSigma = float(SIGMA);\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\n\t\t\t\t\t\tfloat x = float(i);\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\n\t\t\t\t\t\tweightSum += 2.0 * w;\n\t\t\t\t\t}\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})}},{key:"getCompositeMaterial",value:function(t){return new s.jyz({defines:{NUM_MIPS:t},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},dirtTexture:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\n\t\t\t\tuniform sampler2D blurTexture1;\n\t\t\t\tuniform sampler2D blurTexture2;\n\t\t\t\tuniform sampler2D blurTexture3;\n\t\t\t\tuniform sampler2D blurTexture4;\n\t\t\t\tuniform sampler2D blurTexture5;\n\t\t\t\tuniform sampler2D dirtTexture;\n\t\t\t\tuniform float bloomStrength;\n\t\t\t\tuniform float bloomRadius;\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\n\n\t\t\t\tfloat lerpBloomFactor(const in float factor) {\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\n\t\t\t\t}"})}}]),n}(l.w);c.BlurDirectionX=new s.FM8(1,0),c.BlurDirectionY=new s.FM8(0,1)}}]);